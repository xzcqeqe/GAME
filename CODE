// 八皇后问题.cpp : 此文件包含 "main" 函数。程序执行将在此处开始并结束。
//

	// 我真诚地保证：

// 我自己独立地完成了整个程序从分析、设计到编码的所有工作。
// 如果在上述过程中，我遇到了什么困难而求教于人，那么，我将在程序实习报告中
// 详细地列举我所遇到的问题，以及别人给我的提示。

// 在此，我感谢 张学君同学 对我的启发和帮助。下面的报告中，我还会具体地提到
// 他们在各个方法对我的帮助。

// 我的程序里中凡是引用到其他程序或文档之处，
// 例如教材、课堂笔记、网上的源代码以及其他参考书上的代码段,
// 我都已经在程序的注释里很清楚地注明了引用的出处。

// 我从未没抄袭过别人的程序，也没有盗用别人的程序，
// 不管是修改式的抄袭还是原封不动的抄袭。

	// 我编写这个程序，从来没有想过要去破坏或妨碍其他计算机系统的正常运转。

	// 许兆晨


#include "pch.h"
#include <iostream>

using namespace std;

int queen[10] = { -1,-1,-1,-1,-1,-1,-1,-1,-1,-1 };		//创建皇后个数，参数默认为-1
int way = 0;

/*
	判断皇后的位置是否符合要求：不在同一行，不在对角线；
	所需参数：皇后横纵坐标
*/
bool judge(int pointi, int pointj)
{
	for (int i = 0; i < pointi; i++)						//遍历该列所有元素
	{
		if (pointj == queen[i])								//判断两个皇后是否在同一行
			return  false;

		if ((pointi - i) == (pointj - queen[i]))			//判断两个皇后是否在同一主对角线
			return false;									//判断条件：主对角线元素对应坐标之差相等

		if ((pointi - i) + (pointj - queen[i]) == 0)		//判断两个皇后是否在同一副对角线
			return false;									//判断条件：副对角线元素对应坐标之差互为相反数
	}
	return true;
}

/*
	查找皇后位置:
	所需参数：当前皇后的序号与总皇后个数
	核心方法：递归，回溯
*/
void searchSpace(int queenNumber, int number)
{
	
	for (int i = 0; i < number; i++)						//遍历该列，判断是否有合适的位置
	{
		if (judge(queenNumber, i))
		{

			queen[queenNumber] = i;							//将符合要求的位置赋予该皇后，作为皇后的位置 queenNumber就是
															//该位置的列坐标		 queenNumber=j															

			if (queenNumber == number - 1)					//判断是否已将将全部的皇后放置完成
			{
				for (int j = 0; j < number; j++)			//若已将全部皇后放置完成，输出皇后的位置
				{
					cout << "(" << j + 1 << "," << queen[j] + 1 << ")";
				}

				cout << endl;
				way = way + 1;								//在完成一种放置方法后，方法数量自增
			}

			int nextNumber = queenNumber + 1;				//递归：该列插入完成后，开始执行下一个皇后的位置
			searchSpace(nextNumber, number);
		}
	}
	if (queenNumber != 0)									//回溯：如果该列没法插入合适的位置，说明上一列位置放置不合理，回到上一列重新放置
		queen[queenNumber - 1] = -1;

}
int main()
{
	cout << "Please input the number of queen: ";
	int i;
	cin >> i;
	cout << endl;
	searchSpace(0, i);

	cout << endl;
	cout << "There are " << way << " ways!" << endl;

	return 0;
}

// 运行程序: Ctrl + F5 或调试 >“开始执行(不调试)”菜单
// 调试程序: F5 或调试 >“开始调试”菜单

// 入门提示: 
//   1. 使用解决方案资源管理器窗口添加/管理文件
//   2. 使用团队资源管理器窗口连接到源代码管理
//   3. 使用输出窗口查看生成输出和其他消息
//   4. 使用错误列表窗口查看错误
//   5. 转到“项目”>“添加新项”以创建新的代码文件，或转到“项目”>“添加现有项”以将现有代码文件添加到项目
//   6. 将来，若要再次打开此项目，请转到“文件”>“打开”>“项目”并选择 .sln 文件
